<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>坚持跑步 随机减肥</title>
    <url>/2022/10/20/life/%E5%9D%9A%E6%8C%81%E8%B7%91%E6%AD%A5%20%E9%9A%8F%E6%9C%BA%E5%87%8F%E8%82%A5/</url>
    <content><![CDATA[<blockquote>
<p>从那边战争开始，我的体重之战也已经开始打响了，开始我确实小瞧了肉的增长速度，误判形势，以为我作为30多年老牌的长不胖体型，三天解决战斗，一周宣告胜利，但是，随着战斗的不断发展，体重好像也得到了**支持，一再反扑，前天那什么大桥被炸那天我的80公斤防线也已破守，现在的我没有放弃，但是形势对我不利，现在只能派出<strong>跑步</strong>来对抗一下，能挡多久算多久，最后的杀手锏 - <strong>减餐</strong>，不排除使用的可能，尽量克制吧。</p>
</blockquote>
<span id="more"></span>
<p>早上送完腾皞上学，到公园继续跑步，这是本月第10次跑步，除去国庆假期，几乎每天都在坚持。</p>
<img src="https://s3.bmp.ovh/imgs/2022/10/20/dd74e744f031452d.jpg" style="height:420px; width:auto;" />


<p>连续跑了两个月，更多的是惯性驱使，说坚持其实是因为天气冷了，是要下一点决心的。</p>
<p>早上六七点钟，对于年轻人和我这样的中年人来说，要么起不来床，要么着急去上班，能出来运动的更多的是老年人，每天我都是伴着广场上健身的老头老太太开始运动的。</p>
<p>开始先是两分钟的热身：压腿左右各10下，下腰摸地5下，扭腰左右共10下，然后张开手抬头伸腰5次，两个月来，我逐渐固定化了这套热身操。</p>
<p>然后脱掉外套开跑，哦，先点开运动手环里的锻炼—户外跑步。</p>
<p>由慢步逐渐加快，500米后，呼吸开始急促，心率接近150，会比较喘，刚开始跑步的时候，此刻会累的开始变为步行。</p>
<p>接近1公里的时候心跳加剧，逐渐升到160左右，这个时候虽然很喘，但是身体已经开始适应这种呼吸频率。</p>
<p>2公里的时候，心率虽然还是160左右，不过主要是脚开始疲劳，相比第一公里稍微变慢，这个时候如果碰到一起跑步的人，卡着步率，就比较舒服。</p>
<p>3公里的时候，开始流汗，虽然周围9度的温度，身体发热，后半段身体逐渐进入到一个和谐的阶段，脑子里完全放空，只有脚下的路和呼吸，速度甚至还能提升一点。</p>
<p>4公里，身体发热，皮肤微红，有口水但是没力气吐出来，速度下降，这个时候我基本会停了，因为心率要到170了，不要冒险。停表开始慢走。</p>
<p>最后坐椅子上等喘匀，浑身冒热气，和修仙一样，这时是最爽最舒服的时候，呼吸不是顺畅是通畅、浑身散发能量(热气)，全身关节打开的感觉，这也是我跑步的动力之一，因为这个感觉让人上瘾，你想想能让你分泌肾上腺素和多巴胺的事情，跑步绝对是最简单最省钱的了，没有之一。</p>
<p><img src="https://s3.bmp.ovh/imgs/2022/10/20/d44bf037dbb3a4f8.jpg"></p>
<blockquote>
<p>跑步可以让人忘掉一切烦恼，一跑解千愁。绝对比喝酒、抽烟好使。</p>
</blockquote>
<blockquote>
<p>跑步可以让人了解自己的身体，包括呼吸、心率、血液、肌肉疲劳等等，自己能感觉的到，了解自己的身体可以更自信。</p>
</blockquote>
<blockquote>
<p>跑步可以治疗心理抑郁，昨天晚上楼上有个跳楼的孕妇(110救下了)，更坚定了我跑步的动力。</p>
</blockquote>
<p>下次目标5公里。</p>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>居家封闭第四天</title>
    <url>/2022/10/28/life/%E5%B1%85%E5%AE%B6%E5%B0%81%E9%97%AD%E7%AC%AC%E5%9B%9B%E5%A4%A9/</url>
    <content><![CDATA[<h4 id="十月初四"><a href="#十月初四" class="headerlink" title="十月初四"></a>十月初四</h4><p>今天上午“大白”敲门来做核酸检测，上门的核酸要比以前楼下的时候仔细了很多(深了很多)。做完之后，听声音又把门上的封条给放置好，对面邻居应该是爷爷和小的孩子两口人在这边家，大的那个应该在姥姥家。</p>
<p>已经是第四天了，每天起来先看新闻和群消息，估算着什么时候能解封。昨天下楼扔垃圾发现单元门已经锁了，防疫人员说放里面就行，不要下来了，然后下午各户门上开始贴封条。</p>
<span id="more"></span>
<p>昨天楼下开始搭建更多的应急救灾的帐篷，只能看到的大约有七八个，基本上每个单元对应一个，生活物资的供应和垃圾的处理现在都是“大白”在协调处理，确实很辛苦，我们被封控在楼里，他们也被“封控”在小区楼下，且晚上只能睡在帐篷里。</p>
<p>因为彻底断了赚钱的念想，反正也发不出去货，作为电商卖家，双11大促？没有的事。生活反而轻松了，想起一个段子：</p>
<blockquote>
<p>“你一个月赚多少啊？”<br>“三千啊”<br>“那你为什么这么高兴?”<br>“因为我没有办法啊？”</p>
</blockquote>
<p>现在的感觉大抵如此了，躺平吧，能怎样？还能怎样？</p>
<p>孩子每天上网课，老婆每天中午的午觉直接延长到一个半小时，然后就是打扫卫生，家里从来没如此的干净亮堂过，因为可以慢慢的打扫，就是辛苦老婆了。</p>
<p>开始看电视(很多很多年没看过电视了)，昨天晚上开始重看《大明王朝1566》，老婆竟然一起看下去了，不错，能找到共同看的剧的时候不多。</p>
<p>开始逼自己看书，最近看的两本书是《古诗词里的快意人生：瞧，这才是风流》《纳瓦尔宝典》，闲下来读古人，沉稳下心境，读创业，更新下认知，难得如此时间，重夺微信读书排行榜第一名(因为就我一人)。</p>
<p>昨天晚上孩子姥姥来电话，今天上午孩子爷爷打电话，都担心别不够吃的。我看了下冰箱，菜大约还够四五天的(本来以为封一周差不多了，但是谁知道呢)，米面肯定是充足的，其实两大一小三口人每天吃不了多少，现在都由三顿饭改成两顿饭了，10点半吃第一顿饭。早上通过小程序购买的蔬菜包，不知道什么时候能配送，看样子希望不大，等着吧。</p>
<p>中午的时候儿子又趴窗户上数帐篷，看见大白出来会呼我去看，防疫人员的身影可能是这几天唯一的动态风景了。</p>
<p>楼上的小孩嗷嗷的哭声大约持续了半个来钟头。楼外道路上的喇叭声响了一上午</p>
<blockquote>
<p>“广大居民请注意，为切实切断疫情的传播，请所有居民居家，非必要不外出，不聚集，不去公共场所，对拒不配合防疫政策的、不服从管理的，公安机关将依法追究法律责任,谢谢配合。”</p>
</blockquote>
<p>一时的喧闹，主题仍是静默。</p>
<p>和谐温馨的安逸加上无所事事的虚度又伴随着不赚钱的无奈，为了能早日清零和疫情结束，所有人都付出了很大的牺牲和努力。</p>
<p>希望这样的日子不再有。</p>
<p>– 38周岁生日 – </p>
<hr>
<h4 id="七律二首·送瘟神"><a href="#七律二首·送瘟神" class="headerlink" title="七律二首·送瘟神"></a>七律二首·送瘟神</h4><h5 id="毛泽东"><a href="#毛泽东" class="headerlink" title="毛泽东"></a>毛泽东</h5><p><em>读六月三十日《人民日报》，余江县消灭了血吸虫。浮想联翩，夜不能寐。微风拂煦，旭日临窗，遥望南天，欣然命笔。</em></p>
<h5 id="其一"><a href="#其一" class="headerlink" title="其一"></a>其一</h5><p>绿水青山枉自多，华佗无奈小虫何！<br>千村薜荔人遗矢，万户萧疏鬼唱歌。<br>坐地日行八万里，巡天遥看一千河。<br>牛郎欲问瘟神事，一样悲欢逐逝波。</p>
<h5 id="其二"><a href="#其二" class="headerlink" title="其二"></a>其二</h5><p>春风杨柳万千条，六亿神州尽舜尧。<br>红雨随心翻作浪，青山着意化为桥。<br>天连五岭银锄落，地动三河铁臂摇。<br>借问瘟君欲何往，纸船明烛照天烧。</p>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>我的隔离日记</title>
    <url>//geliriji/</url>
    <content><![CDATA[<p>因为疫情原因，这个月基本上一直处于隔离封控的状态，双十一那天因为密接被带走，今天刚从隔离点“放”回家来。隔离期间也算难得自在，坚持每天记录日常，整理成我的《隔离日记》，放在了gitbook上面。</p>
<span id="more"></span>

<p>我的隔离日记：<a href="https://bravechi.gitbook.io/ge-li-ri-ji/">https://bravechi.gitbook.io/ge-li-ri-ji/</a></p>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
        <tag>疫情</tag>
      </tags>
  </entry>
  <entry>
    <title>1024 YQ再次来袭 不确定的当下</title>
    <url>/2022/10/25/life/YQ%E5%86%8D%E6%AC%A1%E6%9D%A5%E8%A2%AD%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E7%9A%84%E5%BD%93%E4%B8%8B/</url>
    <content><![CDATA[<p>消息一开始是父亲打电话给我，说去超市多买点菜，在镇里上班的不让回城了，要等通知。看了眼闹钟，快晚上6点了，8点还要去接孩子放学。   </p>
<p>然后是弟弟微信告诉我，继续驻厂上班，他们已经驻厂接近两个月了，本来今天刚通知要解封了，下午又告知继续等待。</p>
<span id="more"></span>

<p>学校微信群开始有人反馈出不了小区怎么去接孩子？没有下文，应该是可以出来了吧。</p>
<p>我现在租房办公的小区，想着接了孩子赶紧回家，别万一有变化，变的严重了，封在了外面就不合适了，收拾收拾东西关电脑关门窗，急忙开车去学校。</p>
<p>7点就开始等着，虽然还早，但是等孩子放学的家长已经很多了，很多人都猜测着又要上网课了吧？上个月已经上了一月的网课，全域静默了一周(有的地方是两周或者更久)，这刚上了两周学校看样子又要转线上了，家长们最头疼的是这个。</p>
<p>我坐在车里，看着外面黑暗的夜晚和来来去去的车流，莫名有些恐慌和苦笑，这一年，从青岛离职回家，挂星回来自我隔离，然后经历学生网课，下半年遭遇静默管理再到今天疫情突袭到附近1公里，三年来从未做过如此多的核酸，也从没如此强烈的不确定感，即使20年刚开始的时候，依然在春节后按时坐着几无一人的高铁去外地上班，非常的确定着自己的未来，而当下确实有些头疼了，然后我把座椅后放，实现物理上身体的“躺平”，</p>
<blockquote>
<p>我给我弟说：幸好今年回来了，否则今年也不用回来了，又也不该今年回来，如果不辞职，至少有稳定的收入，钱可以能带来确定性。<br>我之前一直有个观点，对孩子来说，是钱比陪伴重要，一是大多数人不会陪，二是大多数孩子需要的是长大后父母的支助。</p>
</blockquote>
<p>一切又似乎如常，8点10分接了高高兴兴放学的儿子，因为知道明天上网课所以很高兴，遇到疫情封控能高兴的莫过于不想上学的学生和小区内的超市老板了。</p>
<p>按照往常的路线回家，走北边，转过弯，到高庙路口发现已经竖起铁皮围栏，禁止通行了，前面一堆的人，这才猛然感觉到，这么快就封了？直走调头走南边建设路，路上碰到一起交通事故，我开始还傻傻的等在一辆货车后面，等了两三分钟没有动，还是旁边有人敲窗户告诉我：前面出车祸了，绕过去不要等。等绕过去发现前面一个小轿车车尾已经给追瘪了。转弯继续往前走，远远的能看到农行路口有警灯在闪了，路口已经封住，不少人和车堆叠在那里，留了右侧的道路可以进入，左转拐行，靠近，警察同志透过车窗告知：进去吗？进去明天就出不来了。我无奈：回家啊没办法，封里面就封里面吧。</p>
<p>在进地库之前又差点拐倒了给小区超市送菜的三轮车，确切的说小菜车已经倒了，我连忙下车一边帮着捡菜，一边道歉，不好意思光看前面排队做核酸的了，没注意对不住对不住。对方嘟囔着“你咋不打转向灯啊？要是碰到人怎么办？”，哎呀！算是有惊无险吧，以后开车可不能心不在焉。</p>
<p>物业早就通知晚上全员加测核酸，老婆已经排队一个小时了，我带着儿子去找他妈，自己去排了另一个队伍，最近两个月做了几十次核酸了，这还是第一次夜间核酸，三年来，总是看这城封闭那城静默的，或者精准到个别小区管控的，很多人看新闻难免有吃瓜瞧热闹的心态，其实经历过才能感同身受。</p>
<blockquote>
<p>看着三大排的核酸队伍，长的有百余人，在夜晚犹如黑色的蚁队，顿感在时代洪流当中，自己个人如同小小蚂蚁，随波荡漾，奋力的去抓住洪流中的一片树叶，那样才会安心，而那片树叶就是在我侧前方排队的老婆和孩子。</p>
</blockquote>
<p>今天早上，不用早起，因为不用去上学，9点的时候孩子继续上网课，我下楼做核酸，排队的人不多，有些人骑着电动车试图出门，可能是碰碰运气吧，但肯定都无功而返，其实对于很多普通人，出门赚钱是第一位的，只有在出租屋里吃方便面的时候才会深刻理解(而我理解的也很深)。记的以前网上有个视频，一个农民工模样的人边喝着方便面边说：“专家说吃方便面不健康，我都吃方便面了还关心健康？”</p>
<p>在小区溜达了半圈，反正没事，闲着也很好(上个月也一样)，唯希望疫情早日结束，国泰民安，未来能多一些确定性，抬头往上看，周围被楼房林立阻挡的上空是如此的晴朗。</p>
<img src="https://s3.bmp.ovh/imgs/2022/10/25/5d273553a6a22888.jpeg" style="height:400px; width:auto; text-align:center">]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>世事无常一切归零重整代发</title>
    <url>/2022/11/01/work/%E4%B8%80%E5%88%87%E5%BD%92%E9%9B%B6%E9%87%8D%E6%95%B4%E4%BB%A3%E5%8F%91/</url>
    <content><![CDATA[<h4 id="今年双十一"><a href="#今年双十一" class="headerlink" title="今年双十一"></a>今年双十一</h4><p>今天是11月1日，按以前的节奏，应该是做电商的最忙活的时候 - <strong>双十一</strong>，但今年的双十一确与我无关，无论是卖还是买。<br>疫情当下，一切皆无定数，足不出户已经8天了，快递全停，准确的说是连续8天收入为零，如果不是两个月前清空了股票账户，看着现在2900点的大盘，还有些小确幸。</p>
<span id="more"></span>
<p>收入的单一性，必然导致财务的脆弱性，牵一发而动全身。创业本就是万分凶险的战斗，前些年电商创业沾了发展和人口市场的红利，从淘宝到拼多多再到现在的抖店，一路看来似乎非常容易谁干谁发，最后还是有很多人没有逃过这波疫情，三年前大家都知道我们的物流无论是寄送价格、配送速度和覆盖区域都碾压全世界，谁能想到还有封城和全域静默这一说？</p>
<h4 id="赚钱历程"><a href="#赚钱历程" class="headerlink" title="赚钱历程"></a>赚钱历程</h4><p>回顾这些年来的副业创业历程，更是感慨世事无常，机遇与风险常伴，想干的和干起来的事业是不一样的。</p>
<ul>
<li>2008年，开网店，卖了第一件衣服(女装)，赔了十元钱，然后关店专心工作了。<br>后面13年的代码编程工作生涯，这是另一条时间线了，按下不表。</li>
<li>2010年通过开发网页应用，第一次赚闲钱，从这次收入开始，就注定了今年义无反顾的辞职全身心要去创业的结果。</li>
<li>2011年开启个人网站站长之路，餐饮品牌网站、个人博客、网赚任务站等都干过、域名贩卖也捣鼓一些。</li>
<li>2013年发现比特币，因为当时价格已经到了1200元(目前价格2万美元)，小玩，然后转向低价币，瑞波币，并且我开创了淘宝买卖的玩法，主做瑞波币钱包激活的生意，带起来不少在淘宝买卖虚拟币的玩家，当时网上流传的很多虚拟币平台倒币教程都是我写的。后来因淘宝封锁虚拟币，此生意才作罢。</li>
<li>2014年网销彩票盛行，当时淘宝、网易都有独立的板块做彩票销售，国家福彩中心也又自己的网销平台，我借用家里的彩票站点注册山东彩票销售平台，开启了网销彩票的生意，因为我多年的互联网经验，通过微信公众号、制作网站和淘宝虚拟产品交易的方式进行推广和销售，做到了济宁市十佳网销站点，并且公众号做到了3万粉丝，最高点时：注册用户1500人，月销售额20W，当时已经梦想继续发展下去，离发家致富就不远了(当时还没有财务自由的概念)，但是国家一纸禁令让这个生意戛然而止。因为彩票的网销存在的两个最大隐患：一：网络平台如淘宝、网易、500等无法监管是否出票，容易形成私彩销售，损害国家福利事业；二：上百万的彩票站点，养活了近千万从业人员，一旦网销做大，势必影响这些人员的就业。砍掉就砍掉吧，因为2015年，老婆的淘宝店开始出单了。</li>
<li>2015年初，老婆开的淘宝店每天也就赚个菜钱，快递单都是一张张手写的，慢慢的一个月赚1K到2K，爆发是在当年的双十一，一天卖了1W+，妈妈和老婆加班打包发了好几天，然后是雇人帮忙发货，16年十月开始租房子发货，18年开始在村里雇人做活。</li>
<li>2019年开始做拼多多店，算是又抓上了一波电商流量(从20年开始，拼多多的流量就超越淘宝了)。</li>
<li>2020年虽然疫情开始，但是电商的发展依然上升，很多人预测疫情间接的促进了电商经济。</li>
<li>2022年3月辞职回家(放弃软件项目管理的工作)，开了抖店，研究视频玩法，但是没有什么成果。</li>
<li>2022年几乎每月全国上百个县市无法发货，10月，全市静默，部分快递停发，11月再次全城静默，足不出户，快递全停，一切归零。</li>
</ul>
<p><a href="https://imgse.com/i/x7oPOJ"><img src="https://s1.ax1x.com/2022/11/01/x7oPOJ.png" alt="x7oPOJ.png"></a></p>
<p>在充满变化的世界里，每个个体的规划会很快的游离，我们取得的成绩无非是太多的机缘巧合，不可捉摸。</p>
<h4 id="期待解封"><a href="#期待解封" class="headerlink" title="期待解封"></a>期待解封</h4><p>居家等待解封的日子里，用老婆的话说：还挺享受，闲的安心，反正不赚钱，想了也没用，我最敬佩的就是老婆这种心态：</p>
<blockquote>
<p>一人挑花瓶行路，花瓶摔地，碎了，此人眼都不抬，继续走路，路人问：你花瓶掉了。此人大笑：既碎何必在看，看又能如何？</p>
</blockquote>
<p>此人很可能就是我老婆。我就不行，焦虑时断时续的，老想以后，无铁饭碗，目前出网店外无赚钱渠道，未来的不确定性及自身经济结构的脆弱性，总是要担心的。<br>封家已8天，目前情势看应还有一周，利用好时间：好好计划一下，把微信收藏清理一下、读几本未读的书、写几篇思考，哪怕写的烂呢？且复盘今年得失，拓展赚钱渠道是当务之急。<br>归零之后，重整代发，相信国家，相信未来。</p>
]]></content>
      <categories>
        <category>工作学习</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>创业</tag>
        <tag>网店</tag>
      </tags>
  </entry>
  <entry>
    <title>《一句顶一万句》读后感</title>
    <url>//read-yjdywj/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>书名</th>
<th>《一句顶一万句》</th>
</tr>
</thead>
<tbody><tr>
<td>作者</td>
<td>刘震云</td>
</tr>
<tr>
<td>ISBN</td>
<td>9786536097261</td>
</tr>
<tr>
<td>时间</td>
<td>2022-11-30</td>
</tr>
<tr>
<td>用时</td>
<td>11h - 18m</td>
</tr>
</tbody></table>
<h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>书名就是全书故事最好的概括，所有的事都围绕着“说的着”和“说不着”来说的。人与人之间发生的关系和事情，说进去就是一句话的事，说不进去，万句也白搭。</p>
<span id="more"></span>
<p>前半本故事写的是河南延津的吴摩西，后半截故事写的是山西沁源的牛爱国，但好像写的还是吴摩西，不一样的地点，不一个人，但事还是一个事，最后都是去找人，找不想去找的人。跨越三代人，每一代都过的憋屈、悲苦还有孤独，所有人都活的拧巴，马尔克斯写过《百年孤独》，这书可以叫百年拧巴，被别人说的话、心中信的理给弄拧巴了。最后牛爱国的一句电话：“不，得找”，三个字，全书戛然而止，最后的结尾也是一句话，也是一个理。</p>
<p>从杨百顺到杨摩西再到吴摩西，名和姓都变了，人还是那个人但活到最后就没了自己，正如文中说的“人活一世，草木一秋”，有时候甚至还不如个草木有意义，如曹青娥(巧玲)，到死也没把最后一句话说明白，也没人明白，等有人明白过来也没必要了。</p>
<h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><p>在我们中国独有的人情乡土社会里，凡是都要讲个老理，理不通则事不顺，但是事和事都是绕在一起的，理和理都是混不清的，最后无事可顺，无理可明。所有的人就好像活在一个弯弯绕绕的囚笼里，不断轮回着父辈的故事，就为了一个事为了一个理，一个个的把自己活成了自己最恨的人的样子。</p>
<p>一句话只要是过了人的嘴，理就不再是那个理了，事也不是那个事了。父与子、夫与妻乃至生和死之间，读不出感情，只有悲苦。归到底，还是这事要怎么说？这理要怎么论？不过和你说的是这个事，论的是另一个理，和你辩的是这个理，但是谈的又是另一个事，一个事里面还绕着别的事，或许做了八件事，但是从根上它就错了。</p>
<p>人活着是为了啥？书里面的一个个的人都没有想过，一辈子浑浑噩噩就过来了，似乎好像就为了两件事：一是为了给别人的口里的理一个交代；一是为了能找个说的上话的人，为了说出来、说明白，只能一直不断地走不断地找。人人活的都像穿了一件扣错扣子的衣服，错了一辈子，突然明白了，想扣回来，但是又看不习惯了。</p>
<p>这本书最能触动的是在农村生活的70、80后群体，只有经历过那种乡土人情社会的人，才能感悟到作者细腻真实的概括总结能力，把农村那种讲话绕弯弯、传话传跑题、老理一套套的特点写的栩栩如生。把乡土中人的狡黠、自私、冷漠但是又真诚、热情、勤劳的两面给你掰开揉碎了展示给你看。人和事，事和理，打断骨连着筋，扯不断理还乱。</p>
<p>所有在这个生态里面的人，就如同被罚推石头的西西弗斯一样，努力的活着、痛苦的轮回。中国人，活的累啊。</p>
<p>人，无处可去，无人可说，百年孤独。</p>
<h2 id="经典语句"><a href="#经典语句" class="headerlink" title="经典语句"></a>经典语句</h2><ol>
<li>日子是过以后，不是过从前。</li>
<li>人心毒不是说它狠，是说大家遇事都不往好处想，盼着事坏。</li>
<li>啥叫悲呀？非心所愿谓之悲呀。</li>
<li>世上的事情，原来件件藏着委屈，原来世上的事情都绕。</li>
<li>人是掰扯不得的，掰扯了别人，就是掰扯了自己。</li>
</ol>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>First 终于搭建成功了</title>
    <url>/2022/10/15/site/%E7%BB%88%E4%BA%8E%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E4%BA%86/</url>
    <content><![CDATA[<h4 id="一、这个网站的由来"><a href="#一、这个网站的由来" class="headerlink" title="一、这个网站的由来"></a>一、这个网站的由来</h4><p>从2011年就一直做自己的网站博客，当时的域名还是 yongzhi.info, 写了大约百十几篇文章，历经从个人日记转型技术博客再转型网赚推荐博客，后来懒于更新，四五年后就慢慢的废掉了，域名也过期不要了。</p>
<p>后来微信公众号起来，到了自媒体时代，个人网站就似乎越来越没有必要了，但是从前年有意识的卸载和屏蔽各种垃圾资讯软件(头条、微博、抖音、朋友圈等，具体原因以后可以细聊一下)，网络表达欲强(单纯的欲望而不是能力)的我，又心痒痒的想再弄一个自己的博客网站，对网站的要求就是</p>
<blockquote>
<p>免费、稳定、干净</p>
</blockquote>
<span id="more"></span>
<p>为什么是这三点？</p>
<ul>
<li><strong>免费</strong>，以前做过不少网站，域名注册过几十个，主机和后来的云服务器用过不少，因为很难坚持更新，很多都是花了冤枉钱，所以免费的为最有选择。</li>
<li><strong>稳定</strong>，过去十几年前前后后写过几百篇博文，因为服务到期、密码丢失、黑客攻击等原因大半都冇了。</li>
<li><strong>干净</strong>，不花里胡哨，可以不好用，但是一定要功能完全可以自定义的。</li>
</ul>
<p>综上所述，选择了github + 静态站点的技术框架。github 可以保证免费和稳定(全世界码农都认同这个说法吧，除了网络访问有时不稳定)，干净，都静态站点了，连数据库都没有，不能再干净了。</p>
<h4 id="二、这个网站的搭建"><a href="#二、这个网站的搭建" class="headerlink" title="二、这个网站的搭建"></a>二、这个网站的搭建</h4><p>第一步就出了个小麻烦，静态站点框架有好几个代表是：jekylly、hexo、hugo，因为我之前一直用的是wordpress博客系统，还有国产的织梦包括论坛系统Dz,静态站点生成器没有用过，看了很多资料，说哪个好的都有，自己一路试下来，选择了hexo. 原因吗？</p>
<blockquote>
<p>就是因为我用hexo搭建成功了，就这样子。 先用的jekylly，因为这个是github官方支持的，去年就搭建了，但是后来电脑一换，丢了资料，换了个模板，重新生成，各种报错，放弃，hugo是因为我完全不懂go语言，搭建好之后，也是卡在模板修改上，改起来比较费劲，hexo是nodeJs的，这个几乎是程序员前端标配了，所以顺手一些。</p>
</blockquote>
<p>搭建方法非常简单，主要参考两个网站</p>
<p><a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a><br><a href="http://theme-next.iissnan.com/getting-started.html">Next模板使用文档</a></p>
<p>具体安装方法 参考我的另一篇文章：<a href="">hexo博客站点搭建及问题</a></p>
<h4 id="三、这个网站的规划"><a href="#三、这个网站的规划" class="headerlink" title="三、这个网站的规划"></a>三、这个网站的规划</h4><p>这个作为我新的博客网站，主要是用来写自己的学习、生活和工作。今年也辞职了，结束了13年的编程开发工作，从开发人员到项目组长再到团队管理，也从淘宝卖家到4家店铺到成立公司，很多知识要学习、很多积累要整理也有很多错误要总结。还有无时无刻的吐槽和泛滥的网络表达欲要分享。本站内容主要分为五种类型：</p>
<ul>
<li>编程开发</li>
<li>我的创业</li>
<li>读书学习</li>
<li>随笔碎想</li>
<li>生活记录</li>
</ul>
<p>按照以往的经验，大概率会有无法归类的内容，不过这个博客就是给自己看的，无所谓的，立个Flag,每周2篇+。</p>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>域名迁移到cloudflare后无法访问重定向次数过多</title>
    <url>/2022/10/16/site/%E5%9F%9F%E5%90%8D%E8%BF%81%E7%A7%BB%E5%88%B0cloudflare%E5%90%8E%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E6%95%B0%E8%BF%87%E5%A4%9A/</url>
    <content><![CDATA[<h4 id="域名无法访问"><a href="#域名无法访问" class="headerlink" title="域名无法访问"></a>域名无法访问</h4><p>昨天将域名迁移到Cloudflare <a href="https://dash.cloudflare.com/">网址</a>上来，因为它免费CDN加速，且github是国外服务器，用它速度会比阿里云快一些。</p>
<p>但是切换DNS和设置CNAME后，bravechi.com 无法访问，显示 “将您重定向的次数过多” 如下图</p>
<span id="more"></span>
<p><img src="https://s3.bmp.ovh/imgs/2022/10/18/a0140cd9b0416c5d.png"></p>
<p>F12查看NetWork,看到无数个301重定向。</p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ol>
<li>访问Cloudflare 登录后台管理，找到发生问题的域名点开。</li>
<li>找到右侧导航SSL/TSL –&gt; 概述(overview), 将您的SSL/TSL加密模式设置为完全(full)</li>
</ol>
<p><img src="https://s3.bmp.ovh/imgs/2022/10/18/2602809582077ae5.png"></p>
<ol start="3">
<li>点击导航 缓存(Caching) –&gt; 配置(Configuration),点击清楚所有内容(purge everything)</li>
</ol>
<p><img src="https://s3.bmp.ovh/imgs/2022/10/18/81e85231db24dec2.png"></p>
<p>最后重新打开网站，发现可以登录了，解决！</p>
<p>虚惊一场，开始以为是外网服务，被限制访问了。</p>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>cloudflare</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>从保险系统升级谈微服务架构的弊端</title>
    <url>//policy-mis/</url>
    <content><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>这几天最热的一个技术新闻是 <a href="https://www.infoq.cn/article/90DJtGOkvjsQWcQYWk9D">《GitHub 前 CTO：全面微服务是最大的架构错误！网友：这不是刚改完 GitHub 吗》</a></p>
<p>这位前CTO Jason Warner 在推特上表示：“我确信过去十年中，最大的架构错误之一就是全面使用微服务”，并建议单体应用到微服务的的规划顺序应该是：<strong>单体应用-&gt;应用-&gt;服务-&gt;微服务。</strong></p>
<span id="more"></span>
<p><img src="https://s2.loli.net/2022/11/21/7WMRX6BLAcoltdQ.png" alt="tt.png"></p>
<p>正好去年我负责并参与了一个保险系统的升级工作，就是从原来的单体应用系统升级成目前流行的微服务架构。实施期间踩了不少的坑，且在后面在运维过程中遇到不少实际的问题，这里再复盘一下自己一些当时不成熟的观点。</p>
<p>微服务架构体系的优点，本文打算一字不讲，因为任何一本书籍教程里、任何一个系统升级PPT中都会把微服务的优点说的非常的全面和准确，肯定要比我总结的更好，但任何事物都是有一利也必有一弊。</p>
<p>首先我非常认同Warner说的观点：<em>如果是一家 5-50 人的公司，只需坚持使用单体；服务越多，维护的风险就越高。</em></p>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>回到我参与的保险系统的升级工作上，当时的系统从项目立项到系统上线，历时半年有余，上线后无论是功能体验还是速度感受都要远远好于原来的SSH架构系统，并且与外围渠道的对接效率有了大幅度提升，好评是有的，结果也是满意的，这里只从开发的角度去吐槽一下客观存在的问题：</p>
<blockquote>
<p>系统被搞的复杂了，至少部分简单问题被复杂化了</p>
</blockquote>
<p>很多时候，我们在“<strong>高并发</strong>”和“<strong>大数据</strong>”的概念下把软件系统变得越来越复杂，而为了解决复杂性，又不得不使用更多的微服务或者其他软件工具，并投入更多的运维成本。实际上我们一般采用的都是各大厂的开源框架，是经过很多版本迭代和应用实践的集成品，代码性能其实有大量冗余，而前面的两个概念，通过硬件解决要比通过代码升级便宜的多的多，而且效果更明显。</p>
<p>但是无论是企业还是开发运维人员更愿意提升“软实力”。</p>
<h4 id="一、微服务拆分的太“微”了"><a href="#一、微服务拆分的太“微”了" class="headerlink" title="一、微服务拆分的太“微”了"></a>一、微服务拆分的太“微”了</h4><p>微服务的‘<strong>道</strong>’是在 <u>服务</u> 这个词语上，但是‘<strong>技</strong>’却在 <u>微</u> 这个字上，越看似合理的服务拆分就会拆的越小（代码的设计之道就是要做到单一性）。我们当时系统升级后有40-50个服务之多，一张保单的保存、计算、提核、核保到保单的生成都有单独的服务，如果被批改的话，又有这么一套单独针对批单的服务。一张投保单数据在不同的“微服务”里会有多种不同状态，那么为了解决单号重复的问题，又不得不把生成保单号码的功能单独作成了一个服务。</p>
<p>因为过多的微服务化，导致有些单个微服务本身，已经退化为功能代码而不是业务代码，在实施上线的过程中，大量的开发和测试工作集中在了如何去兼容上下游的系统。</p>
<p>一个承保系统的核心服务简单划分大致如下图所示：</p>
<p><img src="https://s2.loli.net/2022/11/21/DcJxO8Vvwr9k4LH.png" alt="2022112101.png"></p>
<p>合理拆分最好是按照数据库进行拆分，先分库再谈服务，实际是可以大致分为下面几个相互隔离的库：产品数据库、保单数据库(投保单、保单、批单)、规则文件库、渠道配置及报文库</p>
<p>这虽然不是“微”服务，但是这是服务，是按照业务模块划分的服务。</p>
<h4 id="二、运维和维护系统的灾难"><a href="#二、运维和维护系统的灾难" class="headerlink" title="二、运维和维护系统的灾难"></a>二、运维和维护系统的灾难</h4><p><strong>软件开发的80%的成本来自于维护</strong>。</p>
<p>我从网上随便找了一张微服务的架构体系，来感受一下：</p>
<p><img src="https://s2.loli.net/2022/11/21/3gTs1JdSuo9nvWU.png" alt="microservices1.jpeg"></p>
<p>一个运维人员要熟悉并了解的技术栈从原来的单体应用成倍的增加，特别是在只有十几名开发人员的情况下，贸然使用微服务绝对是疯狂的行为。而我当时的那个运维团队，40多个服务可能只交给三四个人来开发运维。</p>
<blockquote>
<p>DevOps 就是开发运维要全会，用到的技术也越来越多，从编码到发布，从注册到治理，从编排到链路，工具是越来越多，每一个工具都说自己将原来繁重的任务变得简化了，可配置化了，这无疑如同学校的减负一样，每课老师都把作业量控制在了合理的范围内，但是架不住一天上五科啊，可能还附带一个手抄报的作业，</p>
</blockquote>
<p>特别是开发一个需要跨多个服务的功能，需要做更多的工作，这对开发人员来说是一个噩梦，尤其是处理问题跟踪难度飙升，即使借助工具，快速定位了问题代码，但是原因可能是另外的服务引起的，而另外的那个服务可能是其他人开发的，这种倍数级的级联是很可怕的。并且这也导致了下面的一个严重问题。</p>
<h4 id="三、变得越来越糟糕的代码"><a href="#三、变得越来越糟糕的代码" class="headerlink" title="三、变得越来越糟糕的代码"></a>三、变得越来越糟糕的代码</h4><p>先要明白，人都是懒惰的，能少写代码就少写代码，面对跨服务的情况，如果没有严格的开发规范和代码审查，很多人会选择在一个服务中实现另一个服务的功能，也可能是因为对系统架构体系缺乏了解，每个微服务边界模糊不清，随着时间的推移，代码会变得越来越耦合</p>
<p>因为我们的团队属于外包服务，团队内部开发能力参差不齐，且因人员流动频繁，导致大多数开发运维人员，业务知识有限（相信这个问题是大多数外包团队面临的共性问题）。运维阶段大量的时间用来讲解服务架构和业务培训，但是大多数人还是管中窥豹，难见全貌。</p>
<p>正常一个单体应用的系统，在无大牛无技术性领导的情况下，累计到第5年，就会会变的难以维护，如果是微服务架构代码，这个上升曲线会陡增，第三年就可能很难看懂了。</p>
<p><img src="https://s2.loli.net/2022/11/21/nSXGDHm62d3JRVv.png" alt="image.png"></p>
<p>这不是在吐槽当时的团队人员，因为无论承认与否，几乎是所有的(长期运维的)业务系统必然走向的一个结果。相信大多数的一线开发也都接手过别人的“<strong>屎山</strong>”代码。</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>微服务的起源是因为业务系统模块庞大，逐渐的每个模块都被抽离成单独的应用系统，并且对应了专门的开发人员，系统和系统之间交互就需要接口、RPC等方式来进行，慢慢的就衍生出了微服务和各种运维管理工具。</p>
<p><strong>微服务架构的升级，从来不是技术的要求，是业务模式和商业模式的变化带来的需求。服务的拆分肯定会让业务组合更灵活，反之业务模式的快速变化，必然要求IT服务快速的跟上。</strong></p>
<ul>
<li>采用微服务架构前一定要先分析目的是什么？要解决什么问题？微服务是否是最优方案？</li>
<li>还要考虑后期成本，因为业务规模没有上去之前(其实中小保险公司的业务量还达不到应用的理论性能上线，优化优化代码和升级一下硬件，可能是最务实的方案)，升级系统只会增加成本，活是越干越多的，有了电脑难道就比以前用算盘的时候轻松？</li>
<li>最后分析微服务划分的依据是什么，是按功能还是按业务，一个完整的业务链条有无必要按照步骤进行拆分，先分库还是先分服务？都要考虑明白。</li>
</ul>
<hr>
<p>原文首发于：<a href="https://xie.infoq.cn/article/05f17ff44984baee88a5dc5f3">InfoQ</a></p>
]]></content>
      <categories>
        <category>工作学习</category>
      </categories>
      <tags>
        <tag>微服务</tag>
        <tag>系统运维</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac配置Flutter安卓环境问题记录</title>
    <url>/2022/11/03/develop/mac%E5%AE%89%E8%A3%85android%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>安装完Android Studio后运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flutter doctor</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>检查，出现下面的错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[!] Android toolchain - develop for Android devices (Android SDK version 33.0.0)</span><br><span class="line">    ✗ cmdline-tools component is missing</span><br><span class="line">      Run `path/to/sdkmanager --install &quot;cmdline-tools;latest&quot;`</span><br><span class="line">      See https://developer.android.com/studio/command-line for more details.</span><br><span class="line">    ✗ Android license status unknown.</span><br><span class="line">      Run `flutter doctor --android-licenses` to accept the SDK licenses.</span><br><span class="line">      See https://flutter.dev/docs/get-started/install/macos#android-setup for</span><br><span class="line">      more details.</span><br><span class="line">    ...</span><br><span class="line">HTTP Host availability check is taking a long time...[!] HTTP Host Availability</span><br><span class="line">    ✗ HTTP host &quot;https://maven.google.com/&quot; is not reachable. Reason: An error</span><br><span class="line">      occurred while checking the HTTP host: Operation timed out</span><br><span class="line">    ✗ HTTP host &quot;https://cloud.google.com/&quot; is not reachable. Reason: An error</span><br><span class="line">      occurred while checking the HTTP host: Operation timed out</span><br></pre></td></tr></table></figure>

<h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><ol>
<li>第一个是cmdline-tools SDK没有安装，设置Android Studio的SDK Manager,按照下图勾选安装 SDK Tools<br><img src="https://s2.loli.net/2022/11/04/EUhXNP1SyWBaeVO.png" alt="image.png"></li>
<li>按照提示运行命令,并选择同意即可<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure></li>
<li>网址无法访问，换成可访问的地址即可<ul>
<li>找到flutter sdk的文件目录，打开下面路径文件<blockquote>
<p>flutter\packages\flutter_tools\lib\src\http_host_validator.dart</p>
</blockquote>
</li>
<li>修改出错的网址址<blockquote>
<p>将其中的 <a href="https://maven.google.com/">https://maven.google.com/</a> 修改为 <a href="https://dl.google.com/dl/android/maven2/">https://dl.google.com/dl/android/maven2/</a><br>再将 kPubDevHttpHost 和 kgCloudHttpHost 两个常量 分别修改为 <a href="https://pub.flutter-io.cn/">https://pub.flutter-io.cn/</a> 和 <a href="https://storage.flutter-io.cn/">https://storage.flutter-io.cn/</a></p>
</blockquote>
</li>
</ul>
<strong>如下图所示</strong>：<br><img src="https://s2.loli.net/2022/11/04/PfnumbrDeiMgwNV.png" alt="2022-11-0319.00.34.png"></li>
</ol>
<p>再运行 flutter doctor 查看已经解决。</p>
]]></content>
      <categories>
        <category>编程开发</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客站点搭建及问题</title>
    <url>/2022/10/15/site/hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%97%AE%E9%A2%98/hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h4 id="搭建及部署"><a href="#搭建及部署" class="headerlink" title="搭建及部署"></a>搭建及部署</h4><h5 id="1-安装运行环境"><a href="#1-安装运行环境" class="headerlink" title="1. 安装运行环境"></a>1. 安装运行环境</h5><p>Node.js<br>git<br>安装最新版本即可，方法自行解决。</p>
<span id="more"></span>
<h5 id="2-hexo-下载和安装"><a href="#2-hexo-下载和安装" class="headerlink" title="2. hexo 下载和安装"></a>2. hexo 下载和安装</h5><ol>
<li><p>下载安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li>
<li><p>设置环境变量（略）</p>
</li>
<li><p>去自定文件夹下进行初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;  <span class="comment">## folder 为自定义的文件夹名,比如我的是hexo-brave</span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br></pre></td></tr></table></figure>
<p><img src="img1.png" alt="图片1"></p>
</li>
<li><p>安装主题<br>安装next主题(本站主题)为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo-brave</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>主题文件安装到themes目录下面，如下图<br><img src="img2.png" alt="图片1"><br>然后参考<a href="http://theme-next.iissnan.com/getting-started.html">Next模板使用文档</a> 进行主题配置即可。</p>
</li>
<li><p>运行命令</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>生产静态文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li>
<li><p>发布</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li>
<li><p>部署到github</p>
</li>
</ol>
<p>安装hexo-deployer-git程序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>   配置_config.yml文件</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/BraveChi/bravechi.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure>
<p>运行发布命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<h4 id="常用git命令"><a href="#常用git命令" class="headerlink" title="常用git命令"></a>常用git命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">git pull origin main</span><br><span class="line"><span class="comment"># 提交代码</span></span><br><span class="line">git status</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;******&quot;</span></span><br><span class="line"><span class="comment"># 推送代码</span></span><br><span class="line">git push -u origin main </span><br></pre></td></tr></table></figure>

<h4 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h4><ol>
<li>提交失败的错误：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/BraveChi/bravechi.github.io/&#x27;: HTTP/2 stream 1 was not closed cleanly before end of the underlying stream</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (/Users/warrior/网站/github/hexo-brave/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:513:28)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br><span class="line"></span><br></pre></td></tr></table></figure>
解决方法：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf .deploy_git </span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="参考-文档"><a href="#参考-文档" class="headerlink" title="参考 文档"></a>参考 文档</h4><ol>
<li><a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a></li>
<li><a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></li>
</ol>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub图床CDN加速效果对比测试</title>
    <url>//github-cdn-jiasu-compare/</url>
    <content><![CDATA[<h4 id="github图床"><a href="#github图床" class="headerlink" title="github图床"></a>github图床</h4><p>网站文章里面的图片一开始使用的是免费图床，效果还可以，不过还是不太放心(很可能说没就没了)，然后我使用PicGo，配置自己的GitHub仓库作为图床。但是github的国内访问速度真的一言难尽，且很不稳定。</p>
<span id="more"></span>
<p><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/PicGoGitHub.png"></p>
<p>配合jsDelivr免费的CDN分发加速，测试了下图片加载效果。</p>
<blockquote>
<p>下面的图片（172Kb）显示：<br><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/snow.jpg"></p>
</blockquote>
<h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><ol>
<li>国内访问测试</li>
</ol>
<p>测试工具：<a href="https://www.boce.com/">https://www.boce.com</a></p>
<p><a href="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/snow.jpg">加速前链接点击测试</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/speed2.png"></p>
<p><a href="https://github.com/BraveChi/img-bed/blob/main/imgs/snow.jpg?raw=true">加速后链接点击测试</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/speed1.png"></p>
<p>本来期望加速后有效果，但结果其实相差不大，甚至还变慢了😭，猜测原因可能是此时github访问正好很稳定吧？ 所以我不能证明jsDelivr有用。但是有总比无好，万一github又被qiang了呢？</p>
<p><strong>不甘心又试了试国外的网页测试服务</strong></p>
<ol start="2">
<li>国外访问测试<br>测试工具：<a href="https://tools.pingdom.com/">https://tools.pingdom.com</a></li>
</ol>
<p><a href="">加速前链接点击测试</a><br><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/2022-11-0220.53.30.png"></p>
<p><a href="https://github.com/BraveChi/img-bed/blob/main/imgs/snow.jpg?raw=true">加速后链接点击测试</a><br><img src="https://cdn.jsdelivr.net/gh/BraveChi/img-bed@main/imgs/2022-11-0220.52.52.png"></p>
<p><strong>效果出来了</strong>：<br>| 加速前 | 加速后|<br>|–|–|<br>| 288ms | <u>182ms</u>|</p>
<p>总结：PicGo配合GitHub配置免费图床，国外的cdn加速，对国外有用，对国内访问有心理安慰作用。</p>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>Python抓取B站#卡塔尔 世界杯#的视频数据</title>
    <url>//python-wordcup-bili/</url>
    <content><![CDATA[<p>最近什么最火？非#卡塔尔世界杯#莫属，今日凌晨两场点球大战，巴西败北(我巴西球迷，祝马儿加油吧)，梅西晋级。那么编程如何蹭蹭世界杯的热点呢？先用python爬一些世界杯视频数据看看吧。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><span id="more"></span>
<h3 id="一、步骤"><a href="#一、步骤" class="headerlink" title="一、步骤"></a>一、步骤</h3><ol>
<li><p>打开B站，在首页输入搜索关键字，点击查询跳转到搜索结果页面<br><img src="https://static001.geekbang.org/infoq/95/956a16ac27906d20ae9f5092975dbcc6.png"></p>
</li>
<li><p>读取页面信息，并抓取所需数据，然后点击下一页<br><img src="https://static001.geekbang.org/infoq/53/53c36d2f30ee14f674c1d9f40ff9deb3.png"></p>
</li>
<li><p>循环上面过程直至最后一页。</p>
</li>
</ol>
<blockquote>
<p>数据： 标题、播放量、弹幕数、UP主、发布时间</p>
</blockquote>
<h3 id="二、开发技术"><a href="#二、开发技术" class="headerlink" title="二、开发技术"></a>二、开发技术</h3><p>Python + selenium + beautifulsoup + xlwt</p>
<p>使用命令pip list 检查下面包是否已经安装，没有安装可以使用下面命令进行安装，我的是Pip3</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install selenium==<span class="number">3.8</span><span class="number">.0</span> <span class="comment">## 4.0版本之后不支持plantomJs</span></span><br><span class="line">pip3 install beautifulsoup4</span><br><span class="line">pip3 install lxml</span><br><span class="line">pip3 install xlwt</span><br></pre></td></tr></table></figure>

<p>安装chrome驱动，先查看chrome浏览器版本，找到对应的版本号(最接近自己的)，下载，然后解压到任意目录即可。<br><img src="https://static001.geekbang.org/infoq/59/59d63fc894abb7d415ae3b910c470f29.png"></p>
<p>chrome驱动下载地址：</p>
<p><a href="https://registry.npmmirror.com/binary.html?path=chromedriver/">https://registry.npmmirror.com/binary.html?path=chromedriver/</a></p>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><h3 id="1、打开B站"><a href="#1、打开B站" class="headerlink" title="1、打开B站"></a>1、打开B站</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建chrome浏览器驱动</span></span><br><span class="line">driver = webdriver.Chrome(executable_path = <span class="string">&#x27;/Users/warrior/opt/chromedriver&#x27;</span>)</span><br><span class="line"><span class="comment"># 打开网址</span></span><br><span class="line">driver.get(<span class="string">&#x27;https://www.bilibili.com/&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="2、点击首页搜索并返回页码"><a href="#2、点击首页搜索并返回页码" class="headerlink" title="2、点击首页搜索并返回页码"></a>2、点击首页搜索并返回页码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得浏览器中的搜索框 并输入查询关键字</span></span><br><span class="line"><span class="built_in">input</span> = WAIT.until(EC.presence_of_element_located((By.XPATH,<span class="string">&quot;//div[@class=&#x27;nav-search-content&#x27;]/input[@class=&#x27;nav-search-input&#x27;]&quot;</span>)))</span><br><span class="line"><span class="built_in">input</span>.send_keys(key_words)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击查询按钮</span></span><br><span class="line">submit = WAIT.until(EC.element_to_be_clickable((By.XPATH,<span class="string">&quot;//div[@class=&#x27;nav-search-btn&#x27;]&quot;</span>)))</span><br><span class="line">submit.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选中第二个标签页</span></span><br><span class="line">all_h = driver.window_handles</span><br><span class="line">driver.switch_to_window(all_h[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">## 取最大页码</span></span><br><span class="line">maxbtn = WAIT.until(EC.presence_of_element_located((By.XPATH, <span class="string">&quot;//div[@class=&#x27;vui_pagenation--btns&#x27;]//button[last()-1]&quot;</span>)))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>(maxbtn.text)</span><br></pre></td></tr></table></figure>

<h3 id="3、页面加载并读取"><a href="#3、页面加载并读取" class="headerlink" title="3、页面加载并读取"></a>3、页面加载并读取</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 等待页面加载完成(判断是否有下一页按钮)</span></span><br><span class="line">WAIT.until(EC.presence_of_element_located((By.XPATH, <span class="string">&quot;//div[@class=&#x27;vui_pagenation--btns&#x27;]//button[contains(text(), &#x27;下一页&#x27;)]&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得页面源代码</span></span><br><span class="line">html = driver.page_source</span><br></pre></td></tr></table></figure>

<h3 id="4、bs获取页面中数据"><a href="#4、bs获取页面中数据" class="headerlink" title="4、bs获取页面中数据"></a>4、bs获取页面中数据</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="comment"># 得到视频list</span></span><br><span class="line">vidos = soup.find(class_=<span class="string">&#x27;video-list&#x27;</span>).find_all(class_=<span class="string">&#x27;bili-video-card&#x27;</span>)</span><br><span class="line"><span class="comment"># 全局list变量，用于存储抓取的数据</span></span><br><span class="line"><span class="keyword">global</span> vlist</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> vidos:</span><br><span class="line">    <span class="comment"># 取标题</span></span><br><span class="line">    title = item.find(<span class="string">&quot;h3&quot;</span>,class_=<span class="string">&quot;bili-video-card__info--tit&quot;</span>).get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">    <span class="comment"># 取视频链接</span></span><br><span class="line">    link = item.find(<span class="string">&quot;a&quot;</span>, class_=<span class="string">&quot;&quot;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">    link = <span class="string">&quot;https://&quot;</span> + link</span><br><span class="line">    <span class="comment"># 播放数</span></span><br><span class="line">    view_num = item.find(<span class="string">&quot;span&quot;</span>,class_=<span class="string">&quot;bili-video-card__stats--item&quot;</span>).span.string</span><br><span class="line">    <span class="comment"># 弹幕数</span></span><br><span class="line">    danmu = item.find_all(<span class="string">&quot;span&quot;</span>,class_=<span class="string">&quot;bili-video-card__stats--item&quot;</span>)[<span class="number">1</span>].span.string</span><br><span class="line">    <span class="comment"># UP主</span></span><br><span class="line">    author = item.find(<span class="string">&quot;span&quot;</span>, class_=<span class="string">&quot;bili-video-card__info--author&quot;</span>).string</span><br><span class="line">    <span class="comment"># 日期</span></span><br><span class="line">    datee = item.find(<span class="string">&quot;span&quot;</span>,class_=<span class="string">&quot;bili-video-card__info--date&quot;</span>).string</span><br><span class="line">    datee = datee.strip()[<span class="number">1</span>:]</span><br><span class="line">    <span class="built_in">print</span>(title + <span class="string">&quot; &quot;</span> + link + <span class="string">&quot; &quot;</span> + view_num)</span><br><span class="line">    <span class="comment"># 将数据放入到vlist中</span></span><br><span class="line">    vlist.append([title, link, view_num, danmu, author, datee])</span><br></pre></td></tr></table></figure>

<h3 id="5、点击下一页"><a href="#5、点击下一页" class="headerlink" title="5、点击下一页"></a>5、点击下一页</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得下一页按钮</span></span><br><span class="line">nextbtn = WAIT.until(EC.element_to_be_clickable((By.XPATH, <span class="string">&quot;//div[@class=&#x27;vui_pagenation--btns&#x27;]//button[contains(text(), &#x27;下一页&#x27;)]&quot;</span>)))</span><br><span class="line"><span class="comment"># 点击</span></span><br><span class="line">nextbtn.click()</span><br></pre></td></tr></table></figure>

<h3 id="6、保存数据到Excel"><a href="#6、保存数据到Excel" class="headerlink" title="6、保存数据到Excel"></a>6、保存数据到Excel</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建excel</span></span><br><span class="line">wb = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>, style_compression=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sheet = wb.add_sheet(<span class="string">&#x27;b站搜索结果&#x27;</span>,cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;序号&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&#x27;链接&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">3</span>,<span class="string">&#x27;观看次数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">4</span>,<span class="string">&#x27;弹幕数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">5</span>,<span class="string">&#x27;作者&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>,<span class="number">6</span>,<span class="string">&#x27;发布时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> index</span><br><span class="line"><span class="comment"># 遍历并且填入数据</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> vlist:</span><br><span class="line">    sheet.write(index, <span class="number">0</span>, index)</span><br><span class="line">    sheet.write(index, <span class="number">1</span>, m[<span class="number">0</span>])</span><br><span class="line">    sheet.write(index, <span class="number">2</span>, m[<span class="number">1</span>])</span><br><span class="line">    sheet.write(index, <span class="number">3</span>, m[<span class="number">2</span>])</span><br><span class="line">    sheet.write(index, <span class="number">4</span>, m[<span class="number">3</span>])</span><br><span class="line">    sheet.write(index, <span class="number">5</span>, m[<span class="number">4</span>])</span><br><span class="line">    sheet.write(index, <span class="number">6</span>, m[<span class="number">5</span>])</span><br><span class="line">    index = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存输出Excel 文件</span></span><br><span class="line">wb.save(key_words + <span class="string">&quot;b站搜索结果.xlsx&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="7、入口函数"><a href="#7、入口函数" class="headerlink" title="7、入口函数"></a>7、入口函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">	<span class="keyword">try</span>:</span><br><span class="line">	    <span class="comment"># 打开页面并搜索，返回最大页码</span></span><br><span class="line">        total = first_search(key_words)</span><br><span class="line">        <span class="comment"># 循环</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, total+<span class="number">1</span>):</span><br><span class="line">            <span class="comment"># 点击下一页</span></span><br><span class="line">            next_page(i)</span><br><span class="line">	<span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;异常&quot;</span>)</span><br><span class="line">	<span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 关闭浏览器</span></span><br><span class="line">        driver.close()</span><br><span class="line">    <span class="comment">## 保存数据到Excel</span></span><br><span class="line">    save_to_excel(vlist)</span><br></pre></td></tr></table></figure>


<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><h3 id="如图"><a href="#如图" class="headerlink" title="如图"></a>如图</h3><p>分别搜索了”卡塔尔 世界杯” 和”梅西 阿根廷”，生成了两个Excel文件，可以修改变量 key_words 检索B站任意数据结果<br><img src="https://static001.geekbang.org/infoq/3a/3ac49135ca0b9d8e9ba11a5bac27a3b6.png"></p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol>
<li>主要是XPath取页面元素的问题，取不到页面元素，多检查是否漏(多)括号。</li>
<li>读不到页面元素，可能是网络加载慢导致的，一：可以time.sleep(1) 1-2秒一下试试；二：重新运行试试。</li>
<li>B站有反爬机制，UI有可能升级更新，程序报错找不到对应html元素，这个只能事先说明：2022-12-10日的代码</li>
</ol>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>Github: <a href="https://github.com/BraveChi/bzscrpy.git">https://github.com/BraveChi/bzscrpy.git</a></p>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><ol>
<li>WebDriveWait类</li>
</ol>
<p><a href="https://blog.csdn.net/biggbang/article/details/121511531">selenium 之WebDriveWait类的等待机制</a></p>
<ol start="2">
<li>各浏览器驱动下载</li>
</ol>
<table>
<thead>
<tr>
<th>浏览器</th>
<th>驱动下载链接</th>
</tr>
</thead>
<tbody><tr>
<td>Chrome</td>
<td><a href="https://sites.google.com/a/chromium.org/chromedriver/downloads">https://sites.google.com/a/chromium.org/chromedriver/downloads</a>   <a href="https://registry.npmmirror.com/binary.html?path=chromedriver/">https://registry.npmmirror.com/binary.html?path=chromedriver/</a></td>
</tr>
<tr>
<td>Edge</td>
<td><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/</a></td>
</tr>
<tr>
<td>Firefox</td>
<td><a href="https://github.com/mozilla/geckodriver/releases">https://github.com/mozilla/geckodriver/releases</a></td>
</tr>
<tr>
<td>Safari</td>
<td><a href="https://webkit.org/blog/6900/webdriver-support-in-safari-10/">https://webkit.org/blog/6900/webdriver-support-in-safari-10/</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>编程开发</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>世界杯决赛-值得纪念的一战</title>
    <url>//football-wc-meixi/</url>
    <content><![CDATA[<p>昨天凌晨，或者说前天晚上，和儿子一起看了阿根廷和法国的世界杯决赛。从23:00一直看到1:30,最终阿根廷点球决胜，夺得冠军。</p>
<span id="more"></span>
<p>比赛过程不多说了，精彩纷呈、悬念迭起、热血沸腾，儿子每到激动处，就直捶沙发，把他妈妈都吵醒了，骂了我们一顿又回去睡觉了。</p>
<p>我说这场比赛值得纪念，一是因为梅西玉汝于成，加冕封王终得圆满，姆总如天神下凡，惊才绝艳憾失“皇位”；二是因为这是儿子看的第一场完整的足球比赛，而这个第一场竟然是这一场。</p>
<p>撵儿子去睡觉时，儿子还说：激动的我一点都不困了。</p>
<p>对于注定是球迷的小球迷来说，这无疑是福气，看了如此经典且重要的足球比赛，见证了梅西封王一战，看到了最伟大球员的表演，白天的时候和朋友聊起来，都说我儿子有幸，很多小孩子未来只能从集锦里看到足球历史中唯三的球王表演了。</p>
<p>我从98年开始看NBA，我非常理解这种感觉，很多人只见过集锦里的篮球之神，而我见过乔丹的终极表演，这是很多人不曾有的经历。</p>
<p>如同解说贺炜说的那样：<strong>足球不仅展现了球员们励志的奋斗故事，还寄托了普通人平凡生活中的英雄梦想</strong>。对我来说，从罗纳尔多开始到齐达内到小罗C罗到梅西，给我平凡的人生带来了前所未有的激情，并且有幸观看了一代球王-梅西的整个传奇生涯，这是我的荣幸也是儿子的荣幸。</p>
<p><img src="https://s2.loli.net/2022/12/21/3GFTO2Nf5iUPaeI.jpg" alt="20221221215622.jpg"></p>
<p>希望未来儿子能回忆起和他爹一起看球的那个夜晚，一起见证了一个球王封神的最终章。这将是我和儿子无数回忆的其中一篇。</p>
<p>感谢梅西，也谢谢儿子！相信你也会成为未来我值得骄傲的人。</p>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>2022读书总结</title>
    <url>//2022-read-books/</url>
    <content><![CDATA[<p>今年因为离职的缘故，闲暇的时间多，又因为疫情的原因，独处的时间也多，所以有时间读书了，但是读的比较随机，缺少计划性，大都是用微信读书阅读的，而去年是听的书比较多。樊登读书App两年的会员，刚看了下，总共听了132本，学习时长8100分钟了，基本上是坚持了每周听一本书(充钱了不想浪费)。</p>
<span id="more"></span>

<p>划拉了一下微信读书APP，和PC里的电子书，对过去这一年(2022)的读书做个小结：</p>
<h2 id="读完的书"><a href="#读完的书" class="headerlink" title="读完的书"></a>读完的书</h2><ol>
<li><strong>《纳瓦尔宝典》</strong><br>这本是通过樊登读书推荐，然后自己去读的，后面打算专门写个读书笔记关于这本书，对我的认知有不少革新。</li>
<li><strong>《掌控习惯》</strong><br>本来是找来给儿子看的书，给他看的过程中，我也看了一半，后半本大致浏览了过去。对于如何养成良好的习惯有帮助，至少可以从认知上帮助自己了解习惯是如何积小成多的。</li>
<li><strong>《古诗词里的快意人生:瞧，这才是风流》</strong><br>跟着作者重新认识那些古诗背后伟大的人生，或风流或有趣或苦难，算是一本诗人小传的合集，作者文笔幽默，角度清奇也是自成风流。</li>
<li><strong>《一九八四》《动物农场》</strong><br>乔治.奥威尔的代表作，政治寓言故事，外文书籍我向来读不出美感和快感，但是常常惊叹于外文小说的想象力和叙事结构，这两本书，就属于脑洞大，想象力精准(不是宏大)的那种，是我在疫情封控特别是被集中隔离期间读的书，唯有惊叹，一个字”绝！”。</li>
<li><strong>《一句顶一万句》</strong><br>刘震云的书，读后感见<a href="https://bravechi.com/read-yjdywj/">《一句顶一万句》读后感</a></li>
<li><strong>《长安的荔枝》</strong><br>马伯庸的小说，架空唐朝历史小说，类似电视剧《长安十二时辰》，中长篇，情节紧凑紧张尽兴，读来畅快淋漓，快餐类推荐小说。</li>
<li><strong>《占星术杀人魔法》</strong><br>经典推理小说，看到最后我才明白整个手法，案件虽然非常刻意为之（凑齐凑巧都很难办到），但是这种把自己隐藏其中的手法非常新奇。</li>
<li><strong>《将离》</strong><br>作者：童亮，属于民间志怪悬疑类小说，用家乡话说就是神神叨叨的，前面引人入胜，中段精彩绝伦，后面却是虎头蛇尾，草草收场了。可能作者写的后面，因掌控能力不行，各条线收不住了，中间好多的铺垫和伏笔到了后面都成了坑，不得不垫了把稻草一句话就掩盖上了。哎，可惜！</li>
</ol>
<h2 id="在读的书"><a href="#在读的书" class="headerlink" title="在读的书"></a>在读的书</h2><ol>
<li><strong>《OKR工作法》</strong></li>
</ol>
<p>– 谷歌、领英等顶级公司的高绩效秘籍</p>
<ol start="2">
<li><strong>《Python爬虫开发从入门到实践》</strong></li>
</ol>
<p>– 谢乾坤</p>
<ol start="3">
<li><strong>《诡秘之主》</strong></li>
</ol>
<p>– 爱潜水的乌贼，，起点网文</p>
<h2 id="明年计划"><a href="#明年计划" class="headerlink" title="明年计划"></a>明年计划</h2><p>以前读书随机性太大，缺少计划，所以读的也少，强制自己明年多读一些书，赚不了钱就多赚些精神财富。今天豆瓣发布了<a href="https://book.douban.com/annual/2022">《豆瓣2022年读读书榜单》</a>, 我读书很多时候都是跟着推荐读，追热点赶潮流的心理驱使，榜单是我经常的参考项。2023年明年计划读完下面几本书。并希望自己能坚持写读书笔记。</p>
<h3 id="文学类"><a href="#文学类" class="headerlink" title="文学类"></a>文学类</h3><ol>
<li><strong>《如雪如山》</strong></li>
<li><strong>《水浒传》</strong></li>
<li><strong>《当我们不再理解世界》</strong></li>
</ol>
<h3 id="社科类"><a href="#社科类" class="headerlink" title="社科类"></a>社科类</h3><ol>
<li><strong>《可能性的艺术》</strong></li>
<li><strong>《始于极限》</strong></li>
<li><strong>《植物的战斗》</strong></li>
</ol>
<h3 id="技术类"><a href="#技术类" class="headerlink" title="技术类"></a>技术类</h3><ol>
<li><strong>《利用Python进行数据分析》</strong></li>
<li><strong>《Spring Cloud微服务架构开发实战》</strong></li>
<li><strong>《项目管理就这么简单》</strong></li>
</ol>
<hr>
<p>樊登读书会员还有12天就到期了，后面是否续费要考虑考虑，听了两年多了，学了不少，但是还是流于表面，忘得更多。</p>
<p><img src="https://s2.loli.net/2022/12/24/SwTtyzqucLOGRYN.jpg" alt="2022-12-24-01.jpg"></p>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年终终结</title>
    <url>//2022-zongjie/</url>
    <content><![CDATA[<p>今天是元旦，2023-01-01，本应该是在2022的年底写一下终结的，但是很不幸，我病倒了，12月30号的时候开始咳嗽，昨天开始发热，今天继续发热，最高的时候38.4°，吃了布洛芬，躺了一下午，出了一身汗，感觉好点了，爬起来写自己的年终终结。</p>
<span id="more"></span>
<p>过去的2022年，发生了很多事，我自己也经历了人生中的重大转变，如果用两个词来概括自己：躺平和失意。</p>
<h2 id="创业"><a href="#创业" class="headerlink" title="创业"></a>创业</h2><p>22年2月底离职后，回家躺了一段时间，期间经历孩子上网课，8月份租了房子，弄了一个自己的工作室，开了两个网店，一个拼多多店一个抖音抖店，但是因为自己的懈怠导致店铺一直没有大的起色，特别10月以后断断续续的封城，11月的严格防控，和12月的突然放开，导致全国物流大面积停摆，网店的生意也彻底躺平了。</p>
<p>11月还被拉去集中隔离了7天。<br><a href="https://bravechi.gitbook.io/ge-li-ri-ji/">集中隔离期间写的日记</a></p>
<h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><p>编程是我的爱好，也一直有一个当独立开发者的梦想，所以在闲暇时间喜欢看看编程开发方面的教程和视频，躺平的那段时间里自学了python代码的开发(虽然我十几年开发都是java,但是python确实很好玩)。</p>
<p>待完成的两个项目：</p>
<ol>
<li>彩票分析saas平台</li>
<li>保险行业热点资讯排行</li>
</ol>
<h2 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h2><p>这部分单独写了<br><a href="https://bravechi.com/2022-read-books/">2022读书总结</a></p>
<hr>
<p>现在回顾2022年，就如同现在的我，逃不过阳的命运，感冒发热全齐了，虚脱无力，感觉就是不寻常、不真实，也不堪回首。</p>
<p>自己的问题是想得多做的少，很多事情缺少计划性，专注性太差，因为不上班了，没有deadline,很多时候刷着视频一天就过去了。</p>
<p>今年准备只做抖店一个号，拼多多店先转到老婆那边去，她自己负责4个店吧，我这边提高专注，只做一件事，能力实在有限。</p>
<p><strong>非常喜欢网易的文案：</strong></p>
<blockquote>
<p>人不是活一辈子<br>不是活几年、几月、几天<br>而是活几个瞬间<br>我们太容易接受现实<br>因为现实总是那么不真实<br>2022年不该被这样画上句号<br>人生还有小径分叉的花园</p>
</blockquote>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>再度启程 奔赴山海</title>
    <url>/2023/01/30/work/%E5%86%8D%E5%BA%A6%E5%90%AF%E7%A8%8B%20%E5%A5%94%E8%B5%B4%E5%B1%B1%E6%B5%B7/</url>
    <content><![CDATA[<p><strong>暮雪于春，新岁明暄，<br>再度启程，奔向山海。</strong></p>
<span id="more"></span>
<h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><p>今天终于等来了offer通知，定在2月3日(本周五)入职，又要重回职场(实际还是原来的职场)了，或许是我和青岛的缘分未了吧。</p>
<blockquote>
<p><strong>青岛岁月</strong><br>2005 - 2010<br>2019 - 2022<br>2023 - …</p>
</blockquote>
<p>2023年再度启程，奔赴山海！</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li>整理要求带的入职资料</li>
<li>等老婆旅游归来，赶紧把手里的两个网店，交接给老婆</li>
<li>和哥们小聚一下，算是这个年结束了，又要出门远行了</li>
<li>配置笔记本的工作环境，顺带把老婆新的办公电脑也配置一下</li>
<li>2月1日去置办身衣服，出门也要体面一点</li>
<li>洗洗车，回老家拉被褥</li>
<li>2月2日上午开车出发。</li>
</ol>
<h3 id="感慨"><a href="#感慨" class="headerlink" title="感慨"></a>感慨</h3><p>这次重新出发有悸动也有憧憬，恐惧于未知，又激动于挑战。</p>
<p>这又将是一段新的历程，回溯过往，每一次的转折，源于疲惫、源于平淡或源于冲动，每一次的成长，源于痛苦、源于压力或源于挑战。</p>
<p>年龄和行业已经不允许我再去转折了。</p>
<p>青岛的房租价格又涨了…</p>
<p>孩子缺的并不是陪伴，而是父母给他们展现出的表率和提供的价值。</p>
]]></content>
      <categories>
        <category>生活感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>日记</tag>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一次oracle数据库服务重启</title>
    <url>//oracle_restart/</url>
    <content><![CDATA[<p>昨天甲方公司对开发测试服务器迁移整合，要停机维护，迁移完成后，测试数据库停止服务，今天登录的时候，出现以下错误：</p>
<blockquote>
<p><em>ORA-12514</em>: TNS:listener could not resolve SERVICE_NAME given in connect</p>
</blockquote>
<span id="more"></span>

<p><img src="https://s2.loli.net/2023/02/19/yBuOzRLClw3kqpN.png" alt="20230218135857.png"></p>
<p>按照以往流程，需要重新启动数据库服务。</p>
<p>一、登录服务器后台(root用户)，切换到oracle用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 1.切换用户</span></span></span><br><span class="line">su - oracle</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 2.进入到oracle bin目录</span></span></span><br><span class="line">cd $ORACLE_HOME\bin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 3.查看监听服务状态(未成功如下图一)</span></span></span><br><span class="line">lsnrctl status</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 4.关闭和启动监听</span></span></span><br><span class="line">lsnrctl stop</span><br><span class="line">lsnrctl start</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 5. sqlpuls 登入（有时要登两次才可以）</span></span></span><br><span class="line">sqlplus / as sysdba</span><br></pre></td></tr></table></figure>

<p>二、登入后，执行sql命令</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 关闭数据库服务(可以跳过此步，直接启动)</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> shutdown immediate</span><br><span class="line"><span class="comment">-- 启动数据库服务</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> startup</span><br><span class="line"><span class="comment">-- 注册</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">system</span> register;</span><br><span class="line"><span class="comment">-- 退出</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> quit;</span><br></pre></td></tr></table></figure>
<p>如下图：<br><img src="https://s2.loli.net/2023/02/19/lbW7w2LIdCj5gT3.png" alt="Pasted image 20230218135754.png"></p>
<p>三、使用plsql登录成功。</p>
<hr>
<p><img src="https://s2.loli.net/2023/02/19/dOQN4zMFnmAkT8X.png" alt="c2a7d47a2ec45578dcc4f192537e969.png"></p>
<hr>
<p><strong>图一</strong>： 无监听的情况<br><img src="https://s2.loli.net/2023/02/19/xaoKTQCvP1kXM2A.png" alt="Pasted image 20230218135230.png"></p>
<p><strong>图二</strong>：监听程序开启的情况<br><img src="https://s2.loli.net/2023/02/19/vfHoFxLh7gGSWzP.png" alt="Pasted image 20230218133615.png"></p>
<blockquote>
<p>这中间还出现了一次意外，让我搞了好久时间，数据库服务器有67、68两台，但是我用到的数据库是68，但是在67上重启了多次，一直报错：<strong>ORA-12170: TNS:Connet timeout occurred</strong><br>-_-||</p>
</blockquote>
]]></content>
      <categories>
        <category>编程开发</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>本站再次更换域名</title>
    <url>//update_domains/</url>
    <content><![CDATA[<p>原来的域名 <em>bravechi.com</em> 还有一个月就要到期了，不想再续费了(阿里云注册)，至于原因：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一是这个域名有点长，不太好记忆；</span><br><span class="line">二是我现在的这个网站也没什么关注度(自己有时候都想不起来)，没有沉没成本。</span><br><span class="line">三是最重要的一个原因，换了一个更便宜点的域名：</span><br></pre></td></tr></table></figure>
<p> <a href="https://soyou.work/">soyou.work</a></p>
<span id="more"></span>
<p>周末的时候从Godaddy上重新找了这么个非常小众的work域名，图便宜 - 35元。虽然我知道有的网站也有0元域名，但是还是选择了Godaddy这样的大服务商。</p>
<p>这次选择 <strong>soyou.work</strong> 这个域名,也出于以下几点原因：</p>
<blockquote>
<ol>
<li>S 和 Y 是我的名字的缩写。</li>
<li>这次重新选择复出工作(work), 那么我的两个东家，一个是isfotstone, 一个是jingyou, 那么名字里各取一半: soyou</li>
<li>so 是如此、所以、这样、确定的意思，you 你/您。 这样的你、如你一样工作、你又工作了，等等含义。</li>
<li>So you work … </li>
</ol>
</blockquote>
<p>当然我今天突然看到在阿里云注册work域名只要8元的时候，我震惊了，等两个月后再做个域名转移吧！ – 价钱永远是核心价值观。</p>
<hr>
<p>最后也对我的个人博客重新做下规划：</p>
<blockquote>
<p>将读书笔记从生活读书中拆离出来，并将创业这个目录删掉，放到个人项目当中，新建生活感悟主要写个人总结，日记类的文字直接记在<a href="https://flomoapp.com/">Flomo</a>这样的网络工具里面最好，工作学习，主要记录保险系统学习和项目管理方面的知识分享。最终主要分为下面6个类别：</p>
</blockquote>
<ul>
<li>编程开发</li>
<li>工作学习</li>
<li>网站建设</li>
<li>读书笔记</li>
<li>个人项目</li>
<li>生活感悟</li>
</ul>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>编写一个数据库查询的运维小脚本</title>
    <url>//oracleutils_python/</url>
    <content><![CDATA[<p>昨日晚平台升级，我们成功送BUG上线，今天系统问题又多了起来，大多数时候的运维问题需要根据业务反馈的#订单号# 查询到当前状态，然后再进行反馈和处理。</p>
<span id="more"></span>
<p>每次看到运维问题前都要去打开plsql等工具进行数据库查询，或者登录到系统里面进行查看，然后再进行具体的回复和处理。</p>
<blockquote>
<p>以上是需求背景</p>
</blockquote>
<p>能否写一个程序？实现一步操作把常用的信息都查询出来，省去打开数据库工具和重复编写/修改脚本的繁琐操作。  </p>
<p>通过查找资料，写了一个，碰到不少问题，特意记录下来。</p>
<h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><p>开发语言：Python，数据库：oracle，第三方库：cx_Oracle（用于python和oracle的连接），prettytable（用于表格化输出展示数据）</p>
<h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><h3 id="一、安装cx-Oracle"><a href="#一、安装cx-Oracle" class="headerlink" title="一、安装cx_Oracle"></a>一、安装cx_Oracle</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install cx_Oracle</span><br></pre></td></tr></table></figure>
<p>参考官方说明文档：<br><a href="https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html">https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html</a></p>
<h3 id="二、编写数据库操作类"><a href="#二、编写数据库操作类" class="headerlink" title="二、编写数据库操作类"></a>二、编写数据库操作类</h3><p>直接使用了chatgpt提供的代码，因为我只用到了查询方法，所以只查没有增删改，另外考虑到要同时查询多次数据，所以自己修改了实现了一个连接池的功能。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cx_Oracle</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OracleDatabase</span>:</span><br><span class="line">    <span class="comment"># 构造函数，传入数据库连接参数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, user, pwd, dsn, size</span>):</span><br><span class="line">        self.user = user</span><br><span class="line">        self.pwd = pwd</span><br><span class="line">        self.dsn = dsn</span><br><span class="line">        <span class="comment">## 定义连接池</span></span><br><span class="line">        self.size = size</span><br><span class="line">        self.conn_queue = queue.Queue(maxsize=self.size)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.size):</span><br><span class="line">            self.conn_queue.put(self._create_connection())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建数据库连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_create_connection</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> cx_Oracle.connect(self.user, self.pwd, self.dsn)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 从连接池里面获取连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_get_conn</span>(<span class="params">self</span>):</span><br><span class="line">        conn = self.conn_queue.get()</span><br><span class="line">        <span class="keyword">if</span> conn <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self._create_connection()</span><br><span class="line">        <span class="keyword">return</span> conn</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将连接put到连接池中</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_put_conn</span>(<span class="params">self, conn</span>):</span><br><span class="line">        self.conn_queue.put(conn)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭所有连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_close_conn</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                conn = self.conn_queue.get_nowait()</span><br><span class="line">                <span class="keyword">if</span> conn:</span><br><span class="line">                    conn.close()</span><br><span class="line">        <span class="keyword">except</span> queue.Empty:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt;&gt;数据库连接全部关闭&lt;&lt;&lt;&lt;&quot;</span>)</span><br><span class="line">            <span class="keyword">pass</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 执行查询语句</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, sql, params=<span class="literal">None</span></span>):</span><br><span class="line">        res = []</span><br><span class="line">        conn = self._get_conn()</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> params:</span><br><span class="line">                cursor.execute(sql, params)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cursor.execute(sql)</span><br><span class="line">            rows = cursor.fetchall()</span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">                res.append(row)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(e))</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            cursor.close()</span><br><span class="line">            self._put_conn(conn)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>

<h3 id="三、输入订单号，执行查询"><a href="#三、输入订单号，执行查询" class="headerlink" title="三、输入订单号，执行查询"></a>三、输入订单号，执行查询</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    user = <span class="string">&quot;user_dba&quot;</span></span><br><span class="line">    pwd = <span class="string">&quot;user_password&quot;</span></span><br><span class="line">    dsn = cx_Oracle.makedsn(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="string">&#x27;1521&#x27;</span>, service_name=<span class="string">&#x27;s_demo_db&#x27;</span>)</span><br><span class="line">    db = OracleDatabase(user, pwd, dsn, <span class="number">2</span>)</span><br><span class="line">    cl_code = <span class="built_in">input</span>(<span class="string">&quot;输入订单号: &quot;</span>).strip()</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;数据信息展示:&quot;</span>)</span><br><span class="line">    sql_1 = <span class="string">&quot;&quot;&quot;select *</span></span><br><span class="line"><span class="string">		  from table_demo c</span></span><br><span class="line"><span class="string">		  where c.cl_code = :cl_code&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    results_1 = db.query(sql_1, [cl_code])</span><br><span class="line">	<span class="built_in">print</span>(results_1)</span><br><span class="line">	<span class="comment"># ......</span></span><br></pre></td></tr></table></figure>

<h3 id="四、格式化打印"><a href="#四、格式化打印" class="headerlink" title="四、格式化打印"></a>四、格式化打印</h3><ol>
<li><strong>安装prettytable</strong><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install PrettyTable</span><br></pre></td></tr></table></figure></li>
<li><strong>示例代码</strong><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable</span><br><span class="line"></span><br><span class="line"><span class="comment">## 接着第三部分的代码</span></span><br><span class="line">tb_1 = PrettyTable([<span class="string">&#x27;**号&#x27;</span>, <span class="string">&#x27;**时间&#x27;</span>, <span class="string">&#x27;当前状态&#x27;</span>, <span class="string">&#x27;单号&#x27;</span>, <span class="string">&#x27;机构&#x27;</span>])</span><br><span class="line"><span class="keyword">for</span> rs_1 <span class="keyword">in</span> results_1:</span><br><span class="line">	tb_1.add_row([rs_1[<span class="number">0</span>], rs_1[<span class="number">1</span>], rs_1[<span class="number">2</span>], rs_1[<span class="number">3</span>], rs_1[<span class="number">4</span>]])</span><br><span class="line"><span class="built_in">print</span>(tb_1)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="五、打印效果"><a href="#五、打印效果" class="headerlink" title="五、打印效果"></a>五、打印效果</h3><p>使用效果如下：粘贴订单号回车，直接返回下面所需要的信息数据(测试数据)：<br><img src="https://s2.loli.net/2023/04/15/HcNDBmyAnIE3wCV.png" alt="效果图"></p>
<h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><ol>
<li>第一个问题就是安装 cx_Oracle的时候出错：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR: Could not build wheels for cx_Oracle, which is required to install pyproject.toml-based projects</span><br></pre></td></tr></table></figure></li>
</ol>
<p>解决方式：安装Microsoft C++ 生成工具，<a href="https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/">Microsoft C++ 生成工具 - Visual Studio</a>,更改安装目录，按照默认选项安装即可。</p>
<ol start="2">
<li>报错信息</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cx_Oracle.DatabaseError: DPI-1047: Cannot locate a 64-bit Oracle Client library:&quot;The specified module could not be found&quot;.See https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html for help</span><br></pre></td></tr></table></figure>

<p>解决方式：复制oracle客户端(客户端下载见问题3)目录中的oci，oraocci11，oraociei11的3个DLL粘贴到你的Paython目录的Lib/site-packages文件夹下面。</p>
<ol start="3">
<li>报错信息<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cx_Oracle.DatabaseError: DPI-1072: the Oracle Client library version is unsupported</span><br></pre></td></tr></table></figure></li>
</ol>
<p>下载oracle客户端，并解压安装。下载地址：<a href="https://oracle.github.io/odpi/doc/installation">https://oracle.github.io/odpi/doc/installation</a><br>我出现这个问题，是因为我本机原来安装的是19.18版本，换成11.2版本的客户端，按照问题2的操作，将三个dll文件重新复制过去，解决问题。<br><img src="https://s2.loli.net/2023/04/15/ZLBE4FIvzSswNuo.png" alt="图二"></p>
<h2 id="后期优化"><a href="#后期优化" class="headerlink" title="后期优化"></a>后期优化</h2><ol>
<li>将sql语句集中放到配置文件里面，并配置表头，可以实现多查询自由扩展。</li>
<li>通过bat脚本调用执行，真正实现一键查询。</li>
</ol>
]]></content>
      <categories>
        <category>编程开发</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
